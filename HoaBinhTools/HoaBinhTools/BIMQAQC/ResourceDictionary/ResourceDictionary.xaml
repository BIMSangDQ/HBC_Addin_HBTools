<ResourceDictionary 
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
		xmlns:wpf="clr-namespace:HoaBinhTools.Apps">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/HoaBinhTools;component/BIMQAQC/ResourceDictionary/ColorResource.xaml" />
	</ResourceDictionary.MergedDictionaries>
	
	<Style TargetType="{x:Type TextBlock}" x:Key="SD7TextBlock">
		<Setter Property="FontSize" Value="16" />
		<Setter Property="FontWeight" Value="Medium" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
	</Style>
	
	<Style TargetType="{x:Type TextBlock}" x:Key="SD6TextBlock">
		<Setter Property="FontSize" Value="20" />
		<Setter Property="FontWeight" Value="Medium" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="SD5TextBlock">
		<Setter Property="FontSize" Value="24" />
		<Setter Property="FontWeight" Value="Regular" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="SD4TextBlock">
		<Setter Property="FontSize" Value="34" />
		<Setter Property="FontWeight" Value="Regular" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="SD3TextBlock">
		<Setter Property="FontSize" Value="48" />
		<Setter Property="FontWeight" Value="Regular" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="SD2TextBlock">
		<Setter Property="FontSize" Value="60" />
		<Setter Property="FontWeight" Value="Light" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="SD1TextBlock">
		<Setter Property="FontSize" Value="96" />
		<Setter Property="FontWeight" Value="Light" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="SDCaption">
		<Setter Property="FontSize" Value="12" />
		<Setter Property="FontWeight" Value="Regular" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="SDButtonText">
		<Setter Property="FontSize" Value="12" />
		<Setter Property="FontWeight" Value="Regular" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="SDButtonTextBlack">
		<Setter Property="FontSize" Value="12" />
		<Setter Property="FontWeight" Value="Regular" />
		<Setter Property="Foreground" Value="Black" />
	</Style>

	<Style TargetType="{x:Type Button}" x:Key="SDButton">
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="BorderBrush" Value="{StaticResource Primary700}"/>
		<Setter Property="Background" Value="{StaticResource Primary700}"/>
		<Setter Property="Foreground" Value="{StaticResource Primary50}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource Primary300}" />
				<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type Button}" x:Key="SDButtonDel">
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="White" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource Primary300}" />
				<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type Button}" x:Key="SDButtonDel2">
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource Primary300}" />
				<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="SDCombobox" TargetType="{x:Type ComboBox}">
		<Setter Property="Height" Value="25"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
							<ToggleButton.Template>
								<ControlTemplate>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="5*" />
											<ColumnDefinition Width="30" />
										</Grid.ColumnDefinitions>
										<Border x:Name="Border"  Grid.ColumnSpan="2" Background="{StaticResource ColorBackground}" BorderBrush="{StaticResource Primary700}" BorderThickness="0 0 0 2" />
										<Border Grid.Column="0"  Margin="1"  Background="{StaticResource ColorBackground}"  BorderBrush="{StaticResource Primary700}" BorderThickness="0" />
										<Path x:Name="Arrow" Grid.Column="1"  Fill="{StaticResource ColorForeground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
									</Grid>
									<ControlTemplate.Triggers>
										<Trigger Property="ToggleButton.IsMouseOver" Value="true">
											<Setter TargetName="Border" Property="Background" Value="{StaticResource Primary300}" />
										</Trigger>
										<Trigger Property="ToggleButton.IsChecked" Value="true">
											<Setter TargetName="Border" Property="Background" Value="{StaticResource Primary300}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</ToggleButton.Template>
						</ToggleButton>
						<ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" 
										  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
						<TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsEditable}"/>
						<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
							<Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder" Background="White" />
								<ScrollViewer SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{StaticResource Primary300}" />
				<Setter Property="Foreground" Value="White" />
			</Trigger>
			<Trigger Property="SelectedValue" Value="EXCLUDE">
				<Setter Property="HorizontalAlignment" Value="Center"/>
			</Trigger>
			<Trigger Property="SelectedValue" Value="AND">
				<Setter Property="HorizontalAlignment" Value="Right"/>
			</Trigger>
			<Trigger Property="SelectedValue" Value="OR">
				<Setter Property="HorizontalAlignment" Value="Left"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="SDComboboxIsEdit" TargetType="{x:Type ComboBox}">
		<Setter Property="Height" Value="25"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
		<Setter Property="IsEditable" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="5*" />
							<ColumnDefinition Width="30" />
						</Grid.ColumnDefinitions>
						<ToggleButton Grid.Column="1" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
							<ToggleButton.Template>
								<ControlTemplate>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="5*" />
											<ColumnDefinition Width="30" />
										</Grid.ColumnDefinitions>
										<Border x:Name="Border"  Grid.ColumnSpan="2" Background="{StaticResource ColorBackground}" BorderBrush="{StaticResource Primary700}" BorderThickness="0 0 0 2" />
										<Border Grid.Column="0"  Margin="1"  Background="{StaticResource ColorBackground}"  BorderBrush="{StaticResource Primary700}" BorderThickness="0" />
										<Path x:Name="Arrow" Grid.Column="1"  Fill="{StaticResource ColorForeground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
									</Grid>
									<ControlTemplate.Triggers>
										<Trigger Property="ToggleButton.IsMouseOver" Value="true">
											<Setter TargetName="Border" Property="Background" Value="{StaticResource Primary300}" />
										</Trigger>
										<Trigger Property="ToggleButton.IsChecked" Value="true">
											<Setter TargetName="Border" Property="Background" Value="{StaticResource Primary300}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</ToggleButton.Template>
						</ToggleButton>
						<ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" 
										  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
						<TextBox x:Name="PART_EditableTextBox" Visibility="Visible" IsReadOnly="False"/>
						<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
							<Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder" Background="White" />
								<ScrollViewer SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{StaticResource Primary300}" />
				<Setter Property="Foreground" Value="White" />
			</Trigger>
			<Trigger Property="SelectedValue" Value="EXCLUDE">
				<Setter Property="HorizontalAlignment" Value="Center"/>
			</Trigger>
			<Trigger Property="SelectedValue" Value="AND">
				<Setter Property="HorizontalAlignment" Value="Right"/>
			</Trigger>
			<Trigger Property="SelectedValue" Value="OR">
				<Setter Property="HorizontalAlignment" Value="Left"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="SDComboboxHiddenText" TargetType="{x:Type ComboBox}">
		<Setter Property="Height" Value="25"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
							<ToggleButton.Template>
								<ControlTemplate>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="0" />
											<ColumnDefinition Width="30" />
										</Grid.ColumnDefinitions>
										<Border x:Name="Border"  Grid.ColumnSpan="2" Background="{StaticResource ColorBackground}" BorderBrush="{StaticResource Accent700}" BorderThickness="0 0 0 2" />
										<Border Grid.Column="0"  Margin="1"  Background="{StaticResource ColorForeground}"  BorderBrush="{StaticResource Accent700}" BorderThickness="0"/>
										<Path x:Name="Arrow" Grid.Column="1"  Fill="{StaticResource ColorForeground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
									</Grid>
									<ControlTemplate.Triggers>
										<Trigger Property="ToggleButton.IsMouseOver" Value="true">
											<Setter TargetName="Border" Property="Background" Value="{StaticResource Primary300}" />
										</Trigger>
										<Trigger Property="ToggleButton.IsChecked" Value="true">
											<Setter TargetName="Border" Property="Background" Value="{StaticResource Primary300}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</ToggleButton.Template>
						</ToggleButton>
						<ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="" Margin="3"  />
						<TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsEditable}"/>
						<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
							<Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder" Background="White" />
								<ScrollViewer SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SDTextBox" 
		TargetType="{x:Type TextBox}">
		<Setter Property="Height" Value="25"/>
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="BorderThickness" Value="0 0 0 2"/>
		<Setter Property="BorderBrush" Value="{StaticResource Primary700}"/>
		<Setter Property="Background" Value="{StaticResource ColorBackground}"/>
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource Primary300}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="SDTextBoxNoBackgroud" 
		TargetType="{x:Type TextBox}">
		<Setter Property="Height" Value="25"/>
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="BorderThickness" Value="0 0 0 2"/>
		<Setter Property="BorderBrush" Value="{StaticResource Primary700}"/>
		<Setter Property="Foreground" Value="{StaticResource ColorForeground2}" />
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>

	<Style x:Key="SDTextBoxNoBackgroud2" 
		TargetType="{x:Type TextBox}">
		<Setter Property="Height" Value="25"/>
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="BorderThickness" Value="0 0 0 2"/>
		<Setter Property="BorderBrush" Value="{StaticResource Primary700}"/>
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>

	<Style 
		TargetType="{x:Type TextBox}">
		<Setter Property="Height" Value="25"/>
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="BorderThickness" Value="0 0 0 2"/>
		<Setter Property="BorderBrush" Value="{StaticResource Primary700}"/>
		<Setter Property="Background" Value="{StaticResource ColorBackground}"/>
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource Primary300}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="SDRadio" 
	       TargetType="{x:Type RadioButton}">
		<Setter Property="Height" Value="25"/>
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource Primary700}"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
	</Style>

	<Style x:Key="SDCheckBox" 
	       TargetType="{x:Type CheckBox}">
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource Primary700}"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
	</Style>

	<Style x:Key="SDTabControl"
        TargetType="{x:Type TabControl}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<DockPanel KeyboardNavigation.TabNavigation="Local" LastChildFill="True">
						<TabPanel DockPanel.Dock="{TemplateBinding TabStripPlacement}"
                        Name="HeaderPanel"
                        Grid.Row="0"
                        Panel.ZIndex="1" 
                        Margin="0,0,4,1" 
                        IsItemsHost="True"
                        KeyboardNavigation.TabIndex="1"/>
						<Border 
                        Name="Border" 
                        BorderBrush="{StaticResource ColorForeground}" 
                        BorderThickness="1 0 0 0" 
                        CornerRadius="0" >
							<ContentPresenter 
                            ContentSource="SelectedContent" />
						</Border>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{StaticResource Primary50}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<Style x:Key="SDTabItem" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Background" Value="{StaticResource Primary700}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Height" Value="72" />
		<Setter Property="Width" Value="72" />
		<Style.Triggers>
			<!--<Trigger Property="IsSelected" Value="False">
				<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
				<Setter Property="Background" Value="White" />
			</Trigger>-->
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{StaticResource Primary700}" />
				<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type DataGrid}">
		<!-- Make the border and grid lines a little less imposing -->
		<Setter Property="BorderBrush" Value="{StaticResource ColorBackground}" />
		<Setter Property="HorizontalGridLinesBrush" Value="{StaticResource ColorForeground}" />
		<Setter Property="VerticalGridLinesBrush" Value="{StaticResource ColorBackground}" />

		<Setter Property="RowStyle">
			<Setter.Value>
				<Style TargetType="DataGridRow">
					<Style.Triggers>
						<!-- Highlight a grid row as the mouse passes over -->
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource ColorBackground}" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="CellStyle">
			<Setter.Value>
				<Style TargetType="DataGridCell">
					<Style.Triggers>
						<!--Highlight selected rows-->
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{StaticResource ColorBackground}" />
							<Setter Property="BorderBrush" Value="Transparent" />
							<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Background" Value="{StaticResource ColorBackground}" />
							<Setter Property="BorderBrush" Value="Black" />
							<Setter Property="BorderThickness" Value="1"/>
							<Setter Property="Foreground" Value="{StaticResource ColorForeground}" />
						</Trigger>
					</Style.Triggers>
					<!--Add some padding around the contents of a cell-->
					<Setter Property="Padding" Value="4,3,4,3" />
					<Setter Property="BorderBrush" Value="{StaticResource ColorBackground}"/>
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="DataGridCell">
								<Border Background="{StaticResource ColorBackground}">
									<ContentPresenter />
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="FocusVisualStyle">
						<Setter.Value>
							<Style TargetType="Control">
								<Setter Property="BorderBrush" Value="{StaticResource ColorBackground}" />
							</Style>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SDDataGrid" TargetType="{x:Type DataGrid}">
		<!-- Make the border and grid lines a little less imposing -->
		<Setter Property="BorderBrush" Value="{StaticResource ColorBackground}" />
		<Setter Property="Foreground" Value="{StaticResource ColorForeground}"/>
		<Setter Property="HorizontalGridLinesBrush" Value="{StaticResource ColorForeground}" />
		<Setter Property="VerticalGridLinesBrush" Value="{StaticResource ColorBackground}" />

		<Setter Property="RowStyle">
			<Setter.Value>
				<Style TargetType="DataGridRow">
					<Style.Triggers>
						<!-- Highlight a grid row as the mouse passes over -->
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource Primary300}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{StaticResource Primary300}" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type Expander}">
		<Setter Property="Background" Value="{StaticResource ColorBackground}" />
		<Setter Property="Foreground" Value="{StaticResource Primary700}" />
		<Setter Property="BorderBrush" Value="{StaticResource ColorBackground}"/>
	</Style>

	<Style x:Key="SDImageTF" TargetType="{x:Type Image}">
		<Setter Property="Source" Value="/HoaBinhTools;component/BIMQAQC/ModelChecker/Views/Icon/checkbox-marked.png" />
	</Style>

</ResourceDictionary>